#!/usr/bin/env python3

breakdancerWkngDir =  'breakdancer_TN/'
if config['genomeBuild'] == 'hg19':
    chrPrefix = 'chr'
else:
    chrPrefix = ''

METRICS = ['Score', 'num_Reads']  # parameters to plot
CHR = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', 'X', 'Y']

rule breakdancer_config:
    input:
        t = get_tumor_bam,
        tIndex = get_tumor_index,
        n = get_normal_bam,
        nIndex = get_normal_index
    output:
        breakdancerWkngDir + 'config/{sample}.config'
    params:
        t = get_tumor_bam_container,
        n = get_normal_bam_container
    singularity:
        'shub://bballew/NGS_singularity_recipes:breakdancer_1-4-5'  # contains samtools and breakdancer
    shell:
        'bam2cfg.pl -g -h {params.t} {params.n} > {output}'
        # can't figure out how to get the histograms to show up somewhere other than the directory in which this is run

rule breakdancer_bam_qc:
    input:
        c = breakdancerWkngDir + 'config/{sample}.config',
        t = get_tumor_bam,
        n = get_normal_bam
    output:
        o = breakdancerWkngDir + 'config/{sample}.config.qc',
        t1 = temp(breakdancerWkngDir + 'config/{sample}.t1'),
        t2 = temp(breakdancerWkngDir + 'config/{sample}.t2'),
        t3 = temp(breakdancerWkngDir + 'config/{sample}.t3')
    params:
        path = execBindPath + 'scripts/',
        t = get_tumor_bam_container,
        n = get_normal_bam_container
    singularity: 'shub://bballew/NGS_singularity_recipes:samtools_1-9'
    shell:
        '{params.path}breakdancer_cfg_qc.sh {input.c} {output.t1};'
        '{params.path}breakdancer_qc.sh {params.n} {input.c} {output.t2};'
        '{params.path}breakdancer_qc.sh {params.t} {input.c} {output.t3};'
        'cat {output.t1} {output.t2} {output.t3} > {output.o}'

rule breakdancer_run_per_chrom:
    input:
        breakdancerWkngDir + 'config/{sample}.config'
    output:
        breakdancerWkngDir + 'calls/chrom{chr}.{sample}.out'
    params:
        chrom = chrPrefix + '{chr}'
    singularity:
        'shub://bballew/NGS_singularity_recipes:breakdancer_1-4-5'
    shell:
        'breakdancer-max {input} -o {params.chrom} > {output}'

rule breakdancer_run_translocations:
    input:
        breakdancerWkngDir + 'config/{sample}.config'
    output:
        breakdancerWkngDir + 'calls/transl.{sample}.out'
    singularity:
        'shub://bballew/NGS_singularity_recipes:breakdancer_1-4-5'
    shell:
        'breakdancer-max {input} -t > {output}'

rule breakdancer_combine_results:
    input:
        i1 = expand(breakdancerWkngDir + 'calls/chrom{chr}.{{sample}}.out', chr=CHR),
        i2 = breakdancerWkngDir + 'calls/transl.{sample}.out'
    output:
        o = breakdancerWkngDir + 'calls/all.{sample}.out',
        t1 = temp(breakdancerWkngDir + 'calls/all.{sample}.temp'),
        t2 = temp(breakdancerWkngDir + 'calls/all.{sample}.temp.nohead'),
        t3 = temp(breakdancerWkngDir + 'calls/header.{sample}.temp')
    shell:
        'grep "^#Chr" {input.i2} > {output.t3};'
        'cat {input.i1} {input.i2} >> {output.t1};'
        'grep -v "^#" {output.t1} > {output.t2};'
        'cat {output.t3} {output.t2} > {output.o}'

rule breakdancer_detect_somatic:
    input:
        n = get_normal_bam,
        i = breakdancerWkngDir + 'calls/all.{sample}.out'
    output:
        breakdancerWkngDir + 'somatic/{sample}.out'
    params:
        path = execDir + 'scripts/'
    shell:
        '{params.path}breakdancer_somatic_awk.sh {input.n} {input.i} > {output}'

# rule breakdancer_somatic_distributions:
#     input:
#         breakdancerWkngDir + 'somatic/{sample}.out'
#     output:
#         breakdancerWkngDir + 'plots/{sample}.{metric}.png'
#         # note that an underscore between sample and metric caused a problem when there was also an underscore in metric!
#     params:
#         path = execDir + 'scripts/',
#         headerRow = 0
#     shell:
#         'python3 {params.path}plot_distribution.py {input} {params.headerRow} {wildcards.metric} {output}'

#TODO: think about how to move these histograms to a more appropriate directory

# HISTOS = glob.glob(parentDir'/*insertsize_histogram*')

# rule breakdancer_move_insertsize_plots:
#     input:
        
#     output:
#     shell:

# put filtering thresholds into config file?
# rule breakdancer_basic_filtering:
#     '''
#     Don't use this file for further steps for now.  Let the end user do their own filtering as desired.
#     '''
#     input:
#         breakdancerWkngDir + 'somatic/{sample}.out'
#     output:
#         breakdancerWkngDir + 'somatic_filtered/{sample}.out'
#     params:
#         path = execDir + 'scripts/',
#         qual_threshold = 30,
#         num_reads = 3
#     shell:
#         '{params.path}breakdancer_somatic_filtering.sh {input} {params.qual_threshold} {params.num_reads} > {output}'

# rule breakdancer_summary:
#     input:
#         expand(breakdancerWkngDir + 'somatic/{sample}.out', sample=bamDict.keys())
#     output:
#         breakdancerWkngDir + 'summary.txt'
#     shell:
#         'grep -vc "^#" {input} >> {output} || true'
#         # this throws an error if the grep result is 0: grep exit code 0=match, 1=no match, 2=error.  So "|| true" will circumvent this for snakemake.

rule list_output_files:
    input:
        breakdancerWkngDir + 'somatic/{sample}.out'
    output:
        temp(parentDir + 'SV_files_for_annotation_breakdancer.{sample}.txt')
    params:
        path = execDir + 'scripts/'
    shell:
        '{params.path}list_files.sh {input} {wildcards.sample} > {output}'

rule merge_list:
    input:
        conf = expand(breakdancerWkngDir + 'config/{sample}.config.qc', sample=bamDict.keys()),
        # plots = expand(breakdancerWkngDir + 'plots/{sample}.{metric}.png', sample=bamDict.keys(), metric=METRICS),
        # summ = breakdancerWkngDir + 'summary.txt',
        # don't actually need all these above inputs for this step, but I want a uniform rule all with just the last file so these are here now.
        files = expand(parentDir + 'SV_files_for_annotation_breakdancer.{sample}.txt', sample=bamDict.keys())
    output:
        parentDir + 'SV_files_for_annotation_breakdancer.txt'
    shell:
        'cat {input.files} | sort | sed "1s/^/sample breakdancer\\n/" > {output}'

# rule check_logs:
#     input:
#         logDir + snakejob*.o*
#     output:
#     shell: # check for wc -l > 2, except for breakdancer_config?  exact matches to expected output?
